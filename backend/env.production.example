# Archivo de ejemplo para variables de entorno de producción
# Copia este archivo como .env y configura las variables según tu entorno

# =============================================================================
# CONFIGURACIÓN BÁSICA DE FLASK
# =============================================================================

# Clave secreta para Flask (generar una nueva para producción)
SECRET_KEY=your-super-secret-key-here-minimum-32-characters-long

# Salt para hash de contraseñas (generar una nueva para producción)
SECURITY_PASSWORD_SALT=your-password-salt-here-minimum-16-chars

# Entorno de Flask
FLASK_ENV=production

# Modo debug (SIEMPRE false en producción)
FLASK_DEBUG=false

# =============================================================================
# CONFIGURACIÓN DE BASE DE DATOS SUPABASE
# =============================================================================

# Host de Supabase (Transaction Pooler)
SUPABASE_HOST=aws-0-eu-west-3.pooler.supabase.com

# Puerto de Supabase
SUPABASE_PORT=6543

# Nombre de la base de datos
SUPABASE_DB=postgres

# Usuario de Supabase
SUPABASE_USER=postgres.xmaxohyxgsthligskjvg

# Contraseña de Supabase (obtener de Supabase Dashboard)
SUPABASE_DB_PASSWORD=your-supabase-password-here

# =============================================================================
# CONFIGURACIÓN DE GOOGLE OAUTH
# =============================================================================

# Client ID de Google OAuth (obtener de Google Cloud Console)
GOOGLE_CLIENT_ID=your-google-client-id.apps.googleusercontent.com

# Client Secret de Google OAuth (obtener de Google Cloud Console)
GOOGLE_CLIENT_SECRET=your-google-client-secret-here

# URI de redirección para Google OAuth
GOOGLE_REDIRECT_URI=https://team-time-management.onrender.com/api/auth/google/callback

# =============================================================================
# CONFIGURACIÓN DE EMAIL (SMTP)
# =============================================================================

# Servidor SMTP (Gmail recomendado)
MAIL_SERVER=smtp.gmail.com

# Puerto SMTP
MAIL_PORT=587

# Usar TLS
MAIL_USE_TLS=true

# Usuario de email (tu email de Gmail)
MAIL_USERNAME=your-email@gmail.com

# Contraseña de aplicación de Gmail (App Password)
MAIL_PASSWORD=your-gmail-app-password-here

# Modo mock para emails (false en producción)
MOCK_EMAIL_MODE=false

# =============================================================================
# CONFIGURACIÓN DE CORS
# =============================================================================

# Orígenes permitidos para CORS (separados por comas)
CORS_ORIGINS=https://team-time-management.vercel.app,https://your-domain.com

# =============================================================================
# CONFIGURACIÓN DE LOGGING
# =============================================================================

# Nivel de logging (INFO para producción, DEBUG para desarrollo)
LOG_LEVEL=INFO

# Directorio de logs (crear si no existe)
LOG_DIR=/var/log/team_time_management

# =============================================================================
# CONFIGURACIÓN DE REDIS (OPCIONAL)
# =============================================================================

# URL de Redis para sesiones y caché
REDIS_URL=redis://localhost:6379/0

# =============================================================================
# CONFIGURACIÓN ESPECÍFICA DE RENDER.COM
# =============================================================================

# Puerto para Render (se configura automáticamente)
PORT=10000

# =============================================================================
# INSTRUCCIONES DE CONFIGURACIÓN
# =============================================================================

# 1. GOOGLE OAUTH:
#    - Ve a https://console.cloud.google.com/
#    - Crea un proyecto o selecciona uno existente
#    - Habilita Google+ API
#    - Crea credenciales OAuth 2.0
#    - Añade tu dominio a orígenes autorizados
#    - Copia CLIENT_ID y CLIENT_SECRET aquí

# 2. GMAIL SMTP:
#    - Ve a https://myaccount.google.com/security
#    - Habilita verificación en 2 pasos
#    - Genera una "Contraseña de aplicación"
#    - Usa esa contraseña como MAIL_PASSWORD

# 3. SUPABASE:
#    - Ve a https://supabase.com/dashboard
#    - Selecciona tu proyecto
#    - Ve a Settings > Database
#    - Copia la información de conexión

# 4. SEGURIDAD:
#    - Genera SECRET_KEY y SECURITY_PASSWORD_SALT únicos
#    - Nunca compartas este archivo
#    - Usa variables de entorno en lugar de este archivo en producción

# =============================================================================
# VALIDACIÓN
# =============================================================================

# Ejecuta el script de validación después de configurar:
# python scripts/validate_env.py

# Este script verificará que todas las variables estén configuradas correctamente
